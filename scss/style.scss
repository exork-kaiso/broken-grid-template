@import 'variables.scss';
@import 'mixin.scss';

body {
  margin: 0;
  min-height: 100vh;
  background-color: $gray-1000;
}

.outer-container {
  overflow: hidden;

  .container {
    position: relative;
    background-color: white;
    height: calc((#{$box-height}px + #{$box-height-offset}px) * 6);
    min-height: 100vh;
    width: 100%;
    max-width: #{$container-unset-width}px;
    margin-left: auto;
    margin-right: auto;

    @include mq(sm) {
      max-width: #{$container-sm-width}px;
    }
    @include mq(md) {
      max-width: #{$container-md-width}px;
    }
    @include mq(lg) {
      max-width: #{$container-lg-width}px;
    }
    @include mq(xl) {
      max-width: #{$container-xl-width}px;
    }

    .broken-grid-box {
      position: absolute;
      width: #{$box-unset-width}px;
      height: #{$box-height}px;

      @include mq(sm) {
        width: #{$box-sm-width}px;
      }
      @include mq(md) {
        width: #{$box-md-width}px;
      }
      @include mq(lg) {
        width: #{$box-lg-width}px;
      }
      @include mq(xl) {
        width: #{$box-xl-width}px;
      }

      &:nth-child(odd) {

        left: calc(0px - (100vw - #{$box-unset-width}px)/2);

        @include mq(sm) {
          left: calc(0px - (100vw - #{$box-sm-width}px)/2);
        }
        @include mq(md) {
          left: calc(0px - (100vw - #{$box-md-width}px)/2);
        }
        @include mq(lg) {
          left: calc(0px - (100vw - #{$box-lg-width}px)/2);
        }
        @include mq(xl) {
          left: calc(0px - (100vw - #{$box-xl-width}px)/2);
        }

      }

      &:nth-child(even) {

        right: calc(0px - (100vw - #{$box-unset-width}px)/2);

        @include mq(sm) {
          right: calc(0px - (100vw - #{$box-sm-width}px)/2);
        }
        @include mq(md) {
          right: calc(0px - (100vw - #{$box-md-width}px)/2);
        }
        @include mq(lg) {
          right: calc(0px - (100vw - #{$box-lg-width}px)/2);
        }
        @include mq(xl) {
          right: calc(0px - (100vw - #{$box-xl-width}px)/2);
        }

      }

      &:nth-of-type(1) {
        top: 0;
        background-color: $paleRed;
      }
      &:nth-of-type(2) {
        top: calc((#{$box-height}px + #{$box-height-offset}px) * 1);
        background-color: $paleGreen;
      }
      &:nth-of-type(3) {
        top: calc((#{$box-height}px + #{$box-height-offset}px) * 2);
        background-color: $paleBlue;
      }
      &:nth-of-type(4) {
        top: calc((#{$box-height}px + #{$box-height-offset}px) * 3);
        background-color: $paleCyan;
      }
      &:nth-of-type(5) {
        top: calc((#{$box-height}px + #{$box-height-offset}px) * 4);
        background-color: $paleMagenta;
      }
      &:nth-of-type(6) {
        top: calc((#{$box-height}px + #{$box-height-offset}px) * 5);
        background-color: $paleYellow;
      }
    }
  }

}
